{"mappings":"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","sources":["src/index.js"],"sourcesContent":["window.addEventListener('load', function () {\n  const canvas = this.document.getElementById('canvas1');\n  const ctx = canvas.getContext('2d');\n  canvas.width = 1280;\n  canvas.height = 720;\n\n  ctx.fillStyle = 'white';\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = 'black';\n  ctx.font = '40px Bangers';\n  ctx.textAlign = 'center';\n\n  class Player {\n    constructor(game) {\n      this.game = game;\n      this.collisionX = this.game.width * 0.5;\n      this.collisionY = this.game.height * 0.5;\n      this.collisionRadius = 30;\n      this.speedX = 0;\n      this.speedY = 0;\n      this.dx = 0;\n      this.dy = 0;\n      this.speedModifier = 5;\n      this.spriteWidth = 255;\n      this.spriteHeight = 256;\n      this.width = this.spriteWidth;\n      this.height = this.spriteHeight;\n      this.spriteX;\n      this.spriteY;\n      this.frameX = 0;\n      this.frameY = 0;\n      this.image = document.getElementById('bull');\n    }\n\n    restart() {\n      this.collisionX = this.game.width * 0.5;\n      this.collisionY = this.game.height * 0.5;\n      this.spriteX = this.collisionX - this.width * 0.5;\n      this.spriteY = this.collisionY - this.height * 0.5 - 100;\n    }\n\n    draw(context) {\n      context.drawImage(\n        this.image,\n        this.frameX * this.spriteWidth,\n        this.frameY * this.spriteHeight,\n        this.spriteWidth,\n        this.spriteHeight,\n        this.spriteX,\n        this.spriteY,\n        this.width,\n        this.height\n      );\n      if (this.game.debug) {\n        context.beginPath();\n        context.arc(\n          this.collisionX,\n          this.collisionY,\n          this.collisionRadius,\n          0,\n          Math.PI * 2\n        );\n        context.save();\n        context.globalAlpha = 0.5;\n        context.fill();\n        context.restore();\n        context.stroke();\n        context.beginPath();\n        context.moveTo(this.collisionX, this.collisionY);\n        context.lineTo(this.game.mouse.x, this.game.mouse.y);\n        context.stroke();\n      }\n    }\n    update() {\n      // sprite animation\n      this.dx = this.game.mouse.x - this.collisionX;\n      this.dy = this.game.mouse.y - this.collisionY;\n      const angle = Math.atan2(this.dy, this.dx);\n      if (angle < -2.74 || angle > 2.74) this.frameY = 6;\n      else if (angle < -1.96) this.frameY = 7;\n      else if (angle < -1.17) this.frameY = 0;\n      else if (angle < -0.39) this.frameY = 1;\n      else if (angle < 0.39) this.frameY = 2;\n      else if (angle < 1.17) this.frameY = 3;\n      else if (angle < 1.96) this.frameY = 4;\n      else if (angle < 2.74) this.frameY = 5;\n\n      const distance = Math.hypot(this.dy, this.dx);\n      if (distance > this.speedModifier) {\n        this.speedX = this.dx / distance || 0;\n        this.speedY = this.dy / distance || 0;\n      } else {\n        this.speedX = 0;\n        this.speedY = 0;\n      }\n      this.collisionX += this.speedX * this.speedModifier;\n      this.collisionY += this.speedY * this.speedModifier;\n      this.spriteX = this.collisionX - this.width * 0.5;\n      this.spriteY = this.collisionY - this.height * 0.5 - 100;\n      // horizontal boundaries\n      if (this.collisionX < this.collisionRadius)\n        this.collisionX = this.collisionRadius;\n      else if (this.collisionX > this.game.width - this.collisionRadius)\n        this.collisionX = this.game.width - this.collisionRadius;\n      // vertical boundaries\n      if (this.collisionY < this.game.topMargin + this.collisionRadius)\n        this.collisionY = this.game.topMargin + this.collisionRadius;\n      else if (this.collisionY > this.game.height - this.collisionRadius)\n        this.collisionY = this.game.height - this.collisionRadius;\n      // collision with obstacles\n      this.game.obstacles.forEach(obstacle => {\n        // [distance < sumOfRadii, distance, sumOfRadii, dx, dy];\n        let [collision, distance, sumOfRadii, dx, dy] =\n          this.game.checkCollision(this, obstacle);\n        if (collision) {\n          const unit_x = dx / distance;\n          const unit_y = dy / distance;\n          this.collisionX = obstacle.collisionX + (sumOfRadii + 1) * unit_x;\n          this.collisionY = obstacle.collisionY + (sumOfRadii + 1) * unit_y;\n        }\n      });\n    }\n  }\n\n  class Obstacle {\n    constructor(game) {\n      this.game = game;\n      this.collisionX = Math.random() * this.game.width;\n      this.collisionY = Math.random() * this.game.height;\n      this.collisionRadius = 40;\n      this.image = document.getElementById('obstacles');\n      this.spriteWidth = 250;\n      this.spriteHeight = 250;\n      this.width = this.spriteWidth;\n      this.height = this.spriteHeight;\n      this.spriteX = this.collisionX - this.width * 0.5;\n      this.spriteY = this.collisionY - this.height * 0.5 - 70;\n      this.frameX = Math.floor(Math.random() * 4);\n      this.frameY = Math.floor(Math.random() * 3);\n    }\n    draw(context) {\n      context.drawImage(\n        this.image,\n        this.frameX * this.spriteWidth,\n        this.frameY * this.spriteHeight,\n        this.spriteWidth,\n        this.spriteHeight,\n        this.spriteX,\n        this.spriteY,\n        this.width,\n        this.height\n      );\n      if (this.game.debug) {\n        context.beginPath();\n        context.arc(\n          this.collisionX,\n          this.collisionY,\n          this.collisionRadius,\n          0,\n          Math.PI * 2\n        );\n        context.save();\n        context.globalAlpha = 0.5;\n        context.fill();\n        context.restore();\n        context.stroke();\n      }\n    }\n    update() {}\n  }\n\n  class Egg {\n    constructor(game) {\n      this.game = game;\n      this.collisionRadius = 40;\n      this.margin = this.collisionRadius * 2;\n      this.collisionX =\n        this.margin + Math.random() * (this.game.width - this.margin * 2);\n      this.collisionY =\n        this.game.topMargin +\n        Math.random() * (this.game.height - this.game.topMargin - this.margin);\n      this.collisionRadius = 40;\n      this.image = document.getElementById('egg');\n      this.spriteWidth = 110;\n      this.spriteHeight = 135;\n      this.width = this.spriteWidth;\n      this.height = this.spriteHeight;\n      this.spriteX;\n      this.spriteY;\n      this.hatchTimer = 0;\n      this.hatchInterval = 3000;\n      this.markedForDeletion = false;\n    }\n    draw(context) {\n      context.drawImage(this.image, this.spriteX, this.spriteY);\n      if (this.game.debug) {\n        context.beginPath();\n        context.arc(\n          this.collisionX,\n          this.collisionY,\n          this.collisionRadius,\n          0,\n          Math.PI * 2\n        );\n        context.save();\n        context.globalAlpha = 0.5;\n        context.fill();\n        context.restore();\n        context.stroke();\n        this.displayTimer = (this.hatchTimer * 0.001).toFixed(0);\n        context.fillText(\n          this.displayTimer,\n          this.collisionX,\n          this.collisionY - this.collisionRadius * 2.5\n        );\n      }\n    }\n    update(deltaTime) {\n      this.spriteX = this.collisionX - this.width * 0.5;\n      this.spriteY = this.collisionY - this.height * 0.5 - 30;\n      let collisionObjects = [\n        this.game.player,\n        ...this.game.obstacles,\n        ...this.game.enemies,\n      ];\n      collisionObjects.forEach(object => {\n        let [collision, distance, sumOfRadii, dx, dy] =\n          this.game.checkCollision(this, object);\n        if (collision) {\n          const unit_x = dx / distance;\n          const unit_y = dy / distance;\n          this.collisionX = object.collisionX + (sumOfRadii + 1) * unit_x;\n          this.collisionY = object.collisionY + (sumOfRadii + 1) * unit_y;\n        }\n      });\n      if (\n        this.hatchTimer > this.hatchInterval ||\n        this.collisionY < this.game.topMargin\n      ) {\n        this.game.hatchlings.push(\n          new Larva(this.game, this.collisionX, this.collisionY)\n        );\n        this.markedForDeletion = true;\n        this.game.removeGameObjects();\n      } else {\n        this.hatchTimer += deltaTime;\n      }\n    }\n  }\n\n  class Larva {\n    constructor(game, x, y) {\n      this.game = game;\n      this.collisionX = x;\n      this.collisionY = y;\n      this.collisionRadius = 30;\n      this.image = document.getElementById('larva');\n      this.spriteWidth = 150;\n      this.spriteHeight = 150;\n      this.width = this.spriteWidth;\n      this.height = this.spriteHeight;\n      this.spriteX;\n      this.spriteY;\n      this.speedY = 1 + Math.random();\n      this.frameX = 0;\n      this.frameY = Math.floor(Math.random() * 2);\n    }\n\n    draw(context) {\n      context.drawImage(\n        this.image,\n        this.frameX * this.spriteWidth,\n        this.frameY * this.spriteHeight,\n        this.spriteWidth,\n        this.spriteHeight,\n        this.spriteX,\n        this.spriteY,\n        this.width,\n        this.height\n      );\n      if (this.game.debug) {\n        context.beginPath();\n        context.arc(\n          this.collisionX,\n          this.collisionY,\n          this.collisionRadius,\n          0,\n          Math.PI * 2\n        );\n        context.save();\n        context.globalAlpha = 0.5;\n        context.fill();\n        context.restore();\n        context.stroke();\n      }\n    }\n\n    update() {\n      this.collisionY -= this.speedY;\n      this.spriteX = this.collisionX - this.width * 0.5;\n      this.spriteY = this.collisionY - this.height * 0.5 - 40;\n      if (this.collisionY < this.game.topMargin) {\n        this.markedForDeletion = true;\n        this.game.removeGameObjects();\n        if (!this.game.gameOver) this.game.score++;\n        for (let i = 0; i < 3; i++) {\n          this.game.particles.push(\n            new Firefly(this.game, this.collisionX, this.collisionY, 'yellow')\n          );\n        }\n      }\n      let collisionObjects = [\n        this.game.player,\n        ...this.game.obstacles,\n        this.game.eggs,\n      ];\n      collisionObjects.forEach(object => {\n        let [collision, distance, sumOfRadii, dx, dy] =\n          this.game.checkCollision(this, object);\n        if (collision) {\n          const unit_x = dx / distance;\n          const unit_y = dy / distance;\n          this.collisionX = object.collisionX + (sumOfRadii + 1) * unit_x;\n          this.collisionY = object.collisionY + (sumOfRadii + 1) * unit_y;\n        }\n      });\n      this.game.enemies.forEach(enemy => {\n        if (this.game.checkCollision(this, enemy)[0] && !this.game.gameOver) {\n          this.markedForDeletion = true;\n          this.game.removeGameObjects();\n          this.game.lostHatchlings++;\n          for (let i = 0; i < 3; i++) {\n            this.game.particles.push(\n              new Spark(\n                this.game,\n                this.collisionX,\n                this.collisionY,\n                'lightgreen'\n              )\n            );\n          }\n        }\n      });\n    }\n  }\n\n  class Enemy {\n    constructor(game) {\n      this.game = game;\n      this.collisionRadius = 30;\n      this.speedX = Math.random() * 3 + 0.5;\n      this.image = document.getElementById('toads');\n      this.spriteWidth = 140;\n      this.spriteHeight = 260;\n      this.width = this.spriteWidth;\n      this.height = this.spriteHeight;\n      this.collisionX =\n        this.game.width + this.width + Math.random() * this.game.width * 0.5;\n      this.collisionY =\n        this.game.topMargin +\n        Math.random() * (this.game.height - this.game.topMargin);\n      this.spriteX;\n      this.spriteY;\n      this.frameX = 0;\n      this.frameY = Math.floor(Math.random() * 4);\n    }\n    draw(context) {\n      context.drawImage(\n        this.image,\n        this.frameX * this.spriteWidth,\n        this.frameY * this.spriteHeight,\n        this.spriteWidth,\n        this.spriteHeight,\n        this.spriteX,\n        this.spriteY,\n        this.width,\n        this.height\n      );\n      if (this.game.debug) {\n        context.beginPath();\n        context.arc(\n          this.collisionX,\n          this.collisionY,\n          this.collisionRadius,\n          0,\n          Math.PI * 2\n        );\n        context.save();\n        context.globalAlpha = 0.5;\n        context.fill();\n        context.restore();\n        context.stroke();\n      }\n    }\n    update() {\n      this.spriteX = this.collisionX - this.width * 0.5;\n      this.spriteY = this.collisionY - this.height + 40;\n      this.collisionX -= this.speedX;\n      if (this.spriteX + this.width < 0 && !this.game.gameOver) {\n        this.collisionX =\n          this.game.width + this.width + Math.random() * this.game.width * 0.5;\n        this.collisionY =\n          this.game.topMargin +\n          Math.random() * (this.game.height - this.game.topMargin);\n        this.frameY = Math.floor(Math.random() * 4);\n      }\n      let collisionObjects = [this.game.player, ...this.game.obstacles];\n      collisionObjects.forEach(object => {\n        let [collision, distance, sumOfRadii, dx, dy] =\n          this.game.checkCollision(this, object);\n        if (collision) {\n          const unit_x = dx / distance;\n          const unit_y = dy / distance;\n          this.collisionX = object.collisionX + (sumOfRadii + 1) * unit_x;\n          this.collisionY = object.collisionY + (sumOfRadii + 1) * unit_y;\n        }\n      });\n    }\n  }\n\n  class Particle {\n    constructor(game, x, y, color) {\n      this.game = game;\n      this.collisionX = x;\n      this.collisionY = y;\n      this.color = color;\n      this.radius = Math.floor(Math.random() * 10 + 5);\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 2 + 0.5;\n      this.angle = 0;\n      this.va = Math.random() * 0.1 + 0.01;\n      this.markedForDeletion = false;\n    }\n    draw(context) {\n      context.save();\n      context.fillStyle = this.color;\n      context.beginPath();\n      context.arc(\n        this.collisionX,\n        this.collisionY,\n        this.radius,\n        0,\n        Math.PI * 2\n      );\n      context.fill();\n      context.stroke();\n      context.restore();\n    }\n  }\n\n  class Firefly extends Particle {\n    update() {\n      this.angle += this.va;\n      this.collisionX += Math.cos(this.angle) * this.speedX;\n      this.collisionY -= this.speedY;\n      if (this.collisionY < 0 - this.radius) {\n        this.markedForDeletion = true;\n        this.game.removeGameObjects();\n      }\n    }\n  }\n\n  class Spark extends Particle {\n    update() {\n      this.angle += this.va * 0.5;\n      this.collisionX -= Math.sin(this.angle) * this.speedX;\n      this.collisionY -= Math.cos(this.angle) * this.speedY;\n      if (this.radius > 0.1) this.radius -= 0.05;\n      if (this.radius < 0.2) {\n        this.markedForDeletion = true;\n        this.game.removeGameObjects();\n      }\n    }\n  }\n\n  class Game {\n    constructor(canvas) {\n      this.canvas = canvas;\n      this.width = this.canvas.width;\n      this.height = this.canvas.height;\n      this.topMargin = 260;\n      this.debug = false;\n      this.player = new Player(this);\n      this.fps = 70;\n      this.timer = 0;\n      this.interval = 1000 / this.fps;\n      this.eggTimer = 0;\n      this.eggInterval = 1000;\n      this.numberOfObstacles = 8;\n      this.maxEggs = 10;\n      this.obstacles = [];\n      this.eggs = [];\n      this.enemies = [];\n      this.hatchlings = [];\n      this.particles = [];\n      this.gameObjects = [];\n      this.score = 0;\n      this.winningScore = 20;\n      this.gameOver = false;\n      this.lostHatchlings = 0;\n      this.mouse = {\n        x: this.width * 0.5,\n        y: this.height * 0.5,\n        pressed: false,\n      };\n\n      canvas.addEventListener('mousedown', e => {\n        this.mouse.x = e.offsetX;\n        this.mouse.y = e.offsetY;\n        this.mouse.pressed = true;\n      });\n      canvas.addEventListener('mouseup', e => {\n        this.mouse.x = e.offsetX;\n        this.mouse.y = e.offsetY;\n        this.mouse.pressed = false;\n      });\n      canvas.addEventListener('mousemove', e => {\n        if (this.mouse.pressed) {\n          this.mouse.x = e.offsetX;\n          this.mouse.y = e.offsetY;\n        }\n      });\n      window.addEventListener('keydown', e => {\n        if (e.key == 'd') this.debug = !this.debug;\n        else if (e.key == 'r') this.restart();\n      });\n    }\n\n    render(context, deltaTime) {\n      if (this.timer > this.interval) {\n        context.clearRect(0, 0, this.width, this.height);\n        this.gameObjects = [\n          this.player,\n          ...this.eggs,\n          ...this.obstacles,\n          ...this.enemies,\n          ...this.hatchlings,\n          ...this.particles,\n        ];\n        this.gameObjects.sort((a, b) => {\n          return a.collisionY - b.collisionY;\n        });\n        this.gameObjects.forEach(object => {\n          object.draw(context);\n          object.update(deltaTime);\n        });\n        this.timer = 0;\n      }\n      this.timer += deltaTime;\n      if (\n        this.eggTimer > this.eggInterval &&\n        this.eggs.length < this.maxEggs &&\n        !this.gameOver\n      ) {\n        this.addEgg();\n        this.eggTimer = 0;\n      } else {\n        this.eggTimer += deltaTime;\n      }\n      context.save();\n      context.textAlign = 'left';\n      context.fillText('Score : ' + this.score, 25, 85);\n      if (this.debug) {\n        context.fillText('Lost : ' + this.lostHatchlings, 25, 130);\n      }\n      context.restore();\n      if (this.score >= this.winningScore) {\n        this.gameOver = true;\n        context.save();\n        context.fillStyle = 'rgba(0,0,0,0.5)';\n        context.fillRect(0, 0, this.width, this.height);\n        context.fillStyle = 'white';\n        context.textAlign = 'center';\n        context.shadowOffsetX = 4;\n        context.shadowOffsetY = 4;\n        context.shadowColor = 'black';\n        let message1;\n        let message2;\n        if (this.lostHatchlings <= 5) {\n          message1 = 'Yo-yo You win!!!';\n          message2 = 'You are the best player!!!';\n        } else {\n          message1 = 'Sory you lose !!!';\n          message2 = 'You lost ' + this.lostHatchlings;\n        }\n        context.font = '130px Bangers';\n        context.fillText(message1, this.width * 0.5, this.height * 0.5 - 20);\n        context.font = '40px Bangers';\n        context.fillText(message2, this.width * 0.5, this.height * 0.5 + 30);\n        context.fillText(\n          'Final Score ' +\n            ' - ' +\n            this.score +\n            ' If you want to try again please press \"R\"',\n          this.width * 0.5,\n          this.height * 0.5 + 80\n        );\n        context.restore();\n      }\n    }\n\n    checkCollision(a, b) {\n      const dx = a.collisionX - b.collisionX;\n      const dy = a.collisionY - b.collisionY;\n      const distance = Math.hypot(dy, dx);\n      const sumOfRadii = a.collisionRadius + b.collisionRadius;\n      return [distance < sumOfRadii, distance, sumOfRadii, dx, dy];\n    }\n\n    addEgg() {\n      this.eggs.push(new Egg(this));\n    }\n\n    addEnemy() {\n      this.enemies.push(new Enemy(this));\n    }\n\n    removeGameObjects() {\n      this.eggs = this.eggs.filter(object => !object.markedForDeletion);\n      this.hatchlings = this.hatchlings.filter(\n        object => !object.markedForDeletion\n      );\n      this.particles = this.particles.filter(\n        object => !object.markedForDeletion\n      );\n    }\n\n    restart() {\n      this.player.restart();\n      this.obstacles = [];\n      this.eggs = [];\n      this.enemies = [];\n      this.hatchlings = [];\n      this.particles = [];\n      this.mouse = {\n        x: this.width * 0.5,\n        y: this.height * 0.5,\n        pressed: false,\n      };\n      this.score = 0;\n      this.lostHatchlings = 0;\n      this.gameOver = false;\n      this.init();\n    }\n\n    init() {\n      for (let i = 0; i < 5; i++) {\n        this.addEnemy();\n      }\n      let attempts = 0;\n      while (this.obstacles.length < this.numberOfObstacles && attempts < 500) {\n        let testObstacle = new Obstacle(this);\n        let overlap = false;\n        this.obstacles.forEach(obstacle => {\n          const dx = testObstacle.collisionX - obstacle.collisionX;\n          const dy = testObstacle.collisionY - obstacle.collisionY;\n          const distance = Math.hypot(dy, dx);\n          const distanceBuffer = 150;\n          const sumOfRadii =\n            testObstacle.collisionRadius +\n            obstacle.collisionRadius +\n            distanceBuffer;\n          if (distance < sumOfRadii) {\n            overlap = true;\n          }\n        });\n        const margin = testObstacle.collisionRadius * 3;\n        if (\n          !overlap &&\n          testObstacle.spriteX > 0 &&\n          testObstacle.spriteX < this.width - testObstacle.width &&\n          testObstacle.collisionY > this.topMargin + margin &&\n          testObstacle.collisionY < this.height - margin\n        ) {\n          this.obstacles.push(testObstacle);\n        }\n        attempts++;\n      }\n    }\n  }\n\n  const game = new Game(canvas);\n  game.init();\n  console.log(game);\n\n  let lastTime = 0;\n  function animate(timeStamp) {\n    const deltaTime = timeStamp - lastTime;\n    lastTime = timeStamp;\n    game.render(ctx, deltaTime);\n    requestAnimationFrame(animate);\n  }\n  animate(0);\n});\n"],"names":["window","addEventListener","canvas","this","document","getElementById","ctx","getContext","width","height","fillStyle","lineWidth","strokeStyle","font","textAlign","Player","restart","collisionX","game","collisionY","spriteX","spriteY","draw","context","drawImage","image","frameX","spriteWidth","frameY","spriteHeight","debug","beginPath","arc","collisionRadius","Math","PI","save","globalAlpha","fill","restore","stroke","moveTo","lineTo","mouse","x","y","update","dx","dy","angle","atan2","distance","hypot","speedModifier","speedX","speedY","topMargin","obstacles","forEach","obstacle","collision","sumOfRadii","checkCollision","unit_x","unit_y","constructor","Obstacle","random","floor","Egg","displayTimer","hatchTimer","toFixed","fillText","deltaTime","player","enemies","object","hatchInterval","hatchlings","push","Larva","markedForDeletion","removeGameObjects","margin","gameOver","score","i","particles","Firefly","eggs","enemy","lostHatchlings","Spark","Enemy","Particle","color","radius","va","cos","sin","render","timer","interval","clearRect","gameObjects","sort","a","b","eggTimer","eggInterval","length","maxEggs","addEgg","winningScore","message1","message2","fillRect","shadowOffsetX","shadowOffsetY","shadowColor","addEnemy","filter","pressed","init","attempts","numberOfObstacles","testObstacle","overlap","fps","e","offsetX","offsetY","key","console","log","lastTime","animate","timeStamp","requestAnimationFrame"],"version":3,"file":"index.360a93aa.js.map"}