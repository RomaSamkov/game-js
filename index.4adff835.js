window.addEventListener("load",(function(){const i=this.document.getElementById("canvas1"),s=i.getContext("2d");i.width=1280,i.height=720,s.fillStyle="white",s.lineWidth=3,s.strokeStyle="white";class t{draw(i){i.beginPath(),i.arc(this.collisionX,this.collisionY,this.collisionRadius,0,2*Math.PI),i.save(),i.globalAlpha=.5,i.fill(),i.restore(),i.stroke(),i.beginPath(),i.moveTo(this.collisionX,this.collisionY),i.lineTo(this.game.mouse.x,this.game.mouse.y),i.stroke()}update(){this.dx=this.game.mouse.x-this.collisionX,this.dy=this.game.mouse.y-this.collisionY;const i=Math.hypot(this.dy,this.dx);i>this.speedModifier?(this.speedX=this.dx/i||0,this.speedY=this.dy/i||0):(this.speedX=0,this.speedY=0),this.collisionX+=this.speedX*this.speedModifier,this.collisionY+=this.speedY*this.speedModifier,this.game.obstacles.forEach((i=>{let[s,t,e,h,o]=this.game.checkCollision(this,i);if(s){const s=h/t,l=o/t;this.collisionX=i.collisionX+(e+1)*s,this.collisionY=i.collisionY+(e+1)*l}}))}constructor(i){this.game=i,this.collisionX=.5*this.game.width,this.collisionY=.5*this.game.height,this.collisionRadius=30,this.speedX=0,this.speedY=0,this.dx=0,this.dy=0,this.speedModifier=20}}class e{draw(i){i.drawImage(this.image,this.frameX*this.spriteWidth,0*this.spriteHeight,this.spriteWidth,this.spriteHeight,this.spriteX,this.spriteY,this.width,this.height),i.beginPath(),i.arc(this.collisionX,this.collisionY,this.collisionRadius,0,2*Math.PI),i.save(),i.globalAlpha=.5,i.fill(),i.restore(),i.stroke()}constructor(i){this.game=i,this.collisionX=Math.random()*this.game.width,this.collisionY=Math.random()*this.game.height,this.collisionRadius=60,this.image=document.getElementById("obstacles"),this.spriteWidth=250,this.spriteHeight=250,this.width=this.spriteWidth,this.height=this.spriteHeight,this.spriteX=this.collisionX-.5*this.width,this.spriteY=this.collisionY-.5*this.height-70,this.frameX=Math.floor(4*Math.random()),this.frameY=Math.floor(3*Math.random())}}const h=new class{render(i){this.obstacles.forEach((s=>s.draw(i))),this.player.draw(i),this.player.update()}checkCollision(i,s){const t=i.collisionX-s.collisionX,e=i.collisionY-s.collisionY,h=Math.hypot(e,t),o=i.collisionRadius+s.collisionRadius;return[h<o,h,o,t,e]}init(){let i=0;for(;this.obstacles.length<this.numberOfObstacles&&i<500;){let s=new e(this),t=!1;this.obstacles.forEach((i=>{const e=s.collisionX-i.collisionX,h=s.collisionY-i.collisionY;Math.hypot(h,e)<s.collisionRadius+i.collisionRadius+150&&(t=!0)}));const h=2*s.collisionRadius;!t&&s.spriteX>0&&s.spriteX<this.width-s.width&&s.collisionY>this.topMargin+h&&s.collisionY<this.height-h&&this.obstacles.push(s),i++}}constructor(i){this.canvas=i,this.width=this.canvas.width,this.height=this.canvas.height,this.topMargin=260,this.player=new t(this),this.numberOfObstacles=8,this.obstacles=[],this.mouse={x:.5*this.width,y:.5*this.height,pressed:!1},i.addEventListener("mousedown",(i=>{this.mouse.x=i.offsetX,this.mouse.y=i.offsetY,this.mouse.pressed=!0})),i.addEventListener("mouseup",(i=>{this.mouse.x=i.offsetX,this.mouse.y=i.offsetY,this.mouse.pressed=!1})),i.addEventListener("mousemove",(i=>{this.mouse.pressed&&(this.mouse.x=i.offsetX,this.mouse.y=i.offsetY)}))}}(i);h.init(),console.log(h),function t(){s.clearRect(0,0,i.width,i.height),h.render(s),requestAnimationFrame(t)}()}));
//# sourceMappingURL=index.4adff835.js.map
